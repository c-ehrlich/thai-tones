#!/usr/bin/env bun
/* 
  scripts/generateAudioIndex.ts
  -------------------------------------------
  1. Reads all .mp3 files in `@/assets/audio`
  2. Generates `_sounds.ts` in that folder
  3. Exports an object { fileName: require('./fileName.mp3') }
*/

import { readdirSync, writeFileSync } from "fs";
import { resolve, join, basename, dirname } from "path";
import { fileURLToPath } from "url";

// Because we're using ECMAScript modules in Bun, we mimic Node's __dirname:
// @ts-expect-error
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

function generateAudioIndex() {
  // Path to the audio folder
  const audioDir = resolve(__dirname, "../assets/audio");

  // Where we'll write the output file
  const outputFile = join(audioDir, "_audio-files.ts");

  // Read directory contents
  const files = readdirSync(audioDir);

  // Filter to .mp3 files only
  const mp3Files = files.filter((file) => file.endsWith(".mp3"));

  // Build output lines
  const lines: string[] = [];
  lines.push("// AUTO-GENERATED FILE. DO NOT EDIT MANUALLY.");
  lines.push("// This file is generated by scripts/generateAudioIndex.ts\n");
  lines.push("export const audioFiles = {");

  mp3Files.forEach((file) => {
    const baseName = basename(file, ".mp3");
    lines.push(`  '${baseName}': require('./${file}'),`);
  });

  lines.push("} as const;\n");

  // Write the index file
  writeFileSync(outputFile, lines.join("\n"), "utf8");

  console.log(`Generated index for ${mp3Files.length} mp3 files.`);
  console.log(`Output file: ${outputFile}`);
}

// Run if script is executed directly
// @ts-expect-error
if (import.meta.main) {
  generateAudioIndex();
}
